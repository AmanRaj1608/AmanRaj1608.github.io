try{self["workbox:core:5.1.4"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.4"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=s(t),this.match=e,this.method=n}}class i extends n{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const c=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),"");class r{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:i}=this.findMatchingRoute({url:s,request:e,event:t});let c,r=i&&i.handler;if(!r&&this.s&&(r=this.s),r){try{c=r.handle({url:s,request:e,event:t,params:n})}catch(e){c=Promise.reject(e)}return c instanceof Promise&&this.i&&(c=c.catch(n=>this.i.handle({url:s,request:e,event:t}))),c}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const i of n){let n;const c=i.match({url:e,request:t,event:s});if(c)return n=c,(Array.isArray(c)&&0===c.length||c.constructor===Object&&0===Object.keys(c).length||"boolean"==typeof c)&&(n=void 0),{route:i,params:n}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let a;const o=()=>(a||(a=new r,a.addFetchListener(),a.addCacheListener()),a);function u(e,s,c){let r;if("string"==typeof e){const t=new URL(e,location.href);r=new n(({url:e})=>e.href===t.href,s,c)}else if(e instanceof RegExp)r=new i(e,s,c);else if("function"==typeof e)r=new n(e,s,c);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});r=e}return o().registerRoute(r),r}const h={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},l=e=>[h.prefix,e,h.suffix].filter(e=>e&&e.length>0).join("-"),f=e=>e||l(h.precache),d=e=>e||l(h.runtime),w=new Set;const p=(e,t)=>e.filter(e=>t in e),g=async({request:e,mode:t,plugins:s=[]})=>{const n=p(s,"cacheKeyWillBeUsed");let i=e;for(const e of n)i=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:i}),"string"==typeof i&&(i=new Request(i));return i},y=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:i=[]})=>{const c=await self.caches.open(e),r=await g({plugins:i,request:t,mode:"read"});let a=await c.match(r,n);for(const t of i)if("cachedResponseWillBeUsed"in t){const i=t.cachedResponseWillBeUsed;a=await i.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:a,request:r})}return a},m=async({cacheName:e,request:s,response:n,event:i,plugins:r=[],matchOptions:a})=>{const o=await g({plugins:r,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:c(o.url)});const u=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let i=t,c=!1;for(const t of n)if("cacheWillUpdate"in t){c=!0;const n=t.cacheWillUpdate;if(i=await n.call(t,{request:e,response:i,event:s}),!i)break}return c||(i=i&&200===i.status?i:void 0),i||null})({event:i,plugins:r,response:n,request:o});if(!u)return;const h=await self.caches.open(e),l=p(r,"cacheDidUpdate"),f=l.length>0?await y({cacheName:e,matchOptions:a,request:o}):null;try{await h.put(o,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of w)await e()}(),e}for(const t of l)await t.cacheDidUpdate.call(t,{cacheName:e,event:i,oldResponse:f,newResponse:u,request:o})},v=y,b=async({request:e,fetchOptions:s,event:n,plugins:i=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const c=p(i,"fetchDidFail"),r=c.length>0?e.clone():null;try{for(const t of i)if("requestWillFetch"in t){const s=t.requestWillFetch,i=e.clone();e=await s.call(t,{request:i,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const a=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of i)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:a,response:t}));return t}catch(e){for(const t of c)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:r.clone(),request:a.clone()});throw e}};try{self["workbox:strategies:5.1.4"]&&_()}catch(e){}try{self["workbox:cacheable-response:5.1.4"]&&_()}catch(e){}class q{constructor(e={}){this.o=e.statuses,this.u=e.headers}isResponseCacheable(e){let t=!0;return this.o&&(t=this.o.includes(e.status)),this.u&&t&&(t=Object.keys(this.u).some(t=>e.headers.get(t)===this.u[t])),t}}const R={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};let U;async function x(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},i=t?t(n):n,c=function(){if(void 0===U){const e=new Response("");if("body"in e)try{new Response(e.body),U=!0}catch(e){U=!1}U=!1}return U}()?s.body:await s.blob();return new Response(c,i)}try{self["workbox:precaching:5.1.4"]&&_()}catch(e){}function L(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const i=new URL(n,location.href),c=new URL(n,location.href);return i.searchParams.set("__WB_REVISION__",s),{cacheKey:i.href,url:c.href}}class k{constructor(e){this.h=f(e),this.l=new Map,this.p=new Map,this.g=new Map}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:i}=L(n),c="string"!=typeof n&&n.revision?"reload":"default";if(this.l.has(i)&&this.l.get(i)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.l.get(i),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.g.has(e)&&this.g.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:i});this.g.set(e,n.integrity)}if(this.l.set(i,e),this.p.set(i,c),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],i=await self.caches.open(this.h),c=await i.keys(),r=new Set(c.map(e=>e.url));for(const[e,t]of this.l)r.has(t)?n.push(e):s.push({cacheKey:t,url:e});const a=s.map(({cacheKey:s,url:n})=>{const i=this.g.get(s),c=this.p.get(n);return this.m({cacheKey:s,cacheMode:c,event:e,integrity:i,plugins:t,url:n})});await Promise.all(a);return{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.h),t=await e.keys(),s=new Set(this.l.values()),n=[];for(const i of t)s.has(i.url)||(await e.delete(i),n.push(i.url));return{deletedURLs:n}}async m({cacheKey:e,url:s,cacheMode:n,event:i,plugins:c,integrity:r}){const a=new Request(s,{integrity:r,cache:n,credentials:"same-origin"});let o,u=await b({event:i,plugins:c,request:a});for(const e of c||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:i,request:a,response:u}):u.status<400))throw new t("bad-precaching-response",{url:s,status:u.status});u.redirected&&(u=await x(u)),await m({event:i,plugins:c,response:u,request:e===s?a:new Request(e),cacheName:this.h,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.l}getCachedURLs(){return[...this.l.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.l.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.h)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.h,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const n=this.createHandler(s),i=new Request(e);return()=>n({request:i})}}let j;const N=()=>(j||(j=new k),j);const O=(e,t)=>{const s=N().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:i}={}){const c=new URL(e,location.href);c.hash="",yield c.href;const r=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(c,t);if(yield r.href,s&&r.pathname.endsWith("/")){const e=new URL(r.href);e.pathname+=s,yield e.href}if(n){const e=new URL(r.href);e.pathname+=".html",yield e.href}if(i){const e=i({url:c});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let M=!1;function P(e){M||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const i=f();self.addEventListener("fetch",c=>{const r=O(c.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!r)return;let a=self.caches.open(i).then(e=>e.match(r)).then(e=>e||fetch(r));c.respondWith(a)})})(e),M=!0)}const E=[],K={get:()=>E,add(e){E.push(...e)}},T=e=>{const t=N(),s=K.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},C=e=>{const t=N();e.waitUntil(t.activate())};var W;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),W={},function(e){N().addToCacheList(e),e.length>0&&(self.addEventListener("install",T),self.addEventListener("activate",C))}([{url:"_next/static/HaKYBW7UmJUcP3zw0yJnG/_buildManifest.js",revision:"5ca87c9e858a57e3f2ed3a54e4da2fa7"},{url:"_next/static/HaKYBW7UmJUcP3zw0yJnG/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/chunks/484c840239a025432effd6ecc373d498fa764368.ee69abb2118b2003228b.js",revision:"ae6d1a7302125a5e687c77f1ce022321"},{url:"_next/static/chunks/commons.55102122bdd7b23ca162.js",revision:"2d1fe1540078f0d6a5126969010006dc"},{url:"_next/static/chunks/framework.2113c6061a2f456066a1.js",revision:"ac196392982f758234fd98a3f8722f8f"},{url:"_next/static/chunks/main-a8cdb79f50883c1b1a0a.js",revision:"0c3b3e6552a65703d7aec0c95b4e3bf2"},{url:"_next/static/chunks/pages/404-b3b03c01acc5765e57f2.js",revision:"f4779c8e00bfc6c07f86932b9e3f3fa6"},{url:"_next/static/chunks/pages/_app-7dcb8b98272bfd960c39.js",revision:"e8620c6ee42f1f12a52b93b8f879e97a"},{url:"_next/static/chunks/pages/_error-b05fea131473ee1838af.js",revision:"7c1c1f78908001d9a2aa65e6b2baaf7d"},{url:"_next/static/chunks/pages/about-7ed09d4f1da3bea180e7.js",revision:"26c8d7f0a12989bce9dc94384d80da02"},{url:"_next/static/chunks/pages/contact-9811c9b1260a1eee8c41.js",revision:"31a8944d3e4b8fcd9cc0cde46ed10d95"},{url:"_next/static/chunks/pages/index-ab9726b84fc05cc3d6e9.js",revision:"6b458693b242a29f7a6914f143ea3f0e"},{url:"_next/static/chunks/pages/projects-5cdb532dfe15d9291c98.js",revision:"8b6bb301d59d34dd2dd196d24ae8edfa"},{url:"_next/static/chunks/pages/thanks-89ce6ecdd42c9f494b05.js",revision:"a684a59451ac077b240cb90cc6b40fc0"},{url:"_next/static/chunks/pages/uses-9268381d20adcb2d1014.js",revision:"58862e2532dad03626bd9668104b97b6"},{url:"_next/static/chunks/polyfills-555defa4e62ba07d4446.js",revision:"d66b7bb9a3de4c8a45e3a28c2a9c2859"},{url:"_next/static/chunks/webpack-e067438c4cf4ef2ef178.js",revision:"8c19f623e8389f11131a054a7e17ff95"}]),P(W),u(/.jpg$/,new class{constructor(e={}){this.h=d(e.cacheName),this.v=e.plugins||[],this.q=e.fetchOptions,this.R=e.matchOptions}async handle({event:e,request:s}){"string"==typeof s&&(s=new Request(s));let n,i=await v({cacheName:this.h,request:s,event:e,matchOptions:this.R,plugins:this.v});if(!i)try{i=await this._(s,e)}catch(e){n=e}if(!i)throw new t("no-response",{url:s.url,error:n});return i}async _(e,t){const s=await b({request:e,event:t,fetchOptions:this.q,plugins:this.v}),n=s.clone(),i=m({cacheName:this.h,request:e,response:n,event:t,plugins:this.v});if(t)try{t.waitUntil(i)}catch(e){}return s}},"GET"),u(/api/,new class{constructor(e={}){if(this.h=d(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.v=t?e.plugins:[R,...e.plugins]}else this.v=[R];this.U=e.networkTimeoutSeconds||0,this.q=e.fetchOptions,this.R=e.matchOptions}async handle({event:e,request:s}){const n=[];"string"==typeof s&&(s=new Request(s));const i=[];let c;if(this.U){const{id:t,promise:r}=this.L({request:s,event:e,logs:n});c=t,i.push(r)}const r=this.k({timeoutId:c,request:s,event:e,logs:n});i.push(r);let a=await Promise.race(i);if(a||(a=await r),!a)throw new t("no-response",{url:s.url});return a}L({request:e,logs:t,event:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await this.j({request:e,event:s}))},1e3*this.U)}),id:n}}async k({timeoutId:e,request:t,logs:s,event:n}){let i,c;try{c=await b({request:t,event:n,fetchOptions:this.q,plugins:this.v})}catch(e){i=e}if(e&&clearTimeout(e),i||!c)c=await this.j({request:t,event:n});else{const e=c.clone(),s=m({cacheName:this.h,request:t,response:e,event:n,plugins:this.v});if(n)try{n.waitUntil(s)}catch(e){}}return c}j({event:e,request:t}){return v({cacheName:this.h,request:t,event:e,matchOptions:this.R,plugins:this.v})}}({plugins:[new class{constructor(e){this.cacheWillUpdate=async({response:e})=>this.N.isResponseCacheable(e)?e:null,this.N=new q(e)}}({statuses:[0,200],headers:{"x-test":"true"}})]}),"GET");
